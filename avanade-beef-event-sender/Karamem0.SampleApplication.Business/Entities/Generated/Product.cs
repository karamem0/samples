/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

namespace Karamem0.SampleApplication.Business.Entities
{
    /// <summary>
    /// Represents the Product entity.
    /// </summary>
    public partial class Product : EntityBase, IPrimaryKey, IChangeLogEx
    {
        private Guid _productId;
        private string? _productName;
        private decimal _price;
        private ChangeLogEx? _changeLog;

        /// <summary>
        /// Gets or sets the Product Id.
        /// </summary>
        public Guid ProductId { get => _productId; set => SetValue(ref _productId, value); }

        /// <summary>
        /// Gets or sets the Product Name.
        /// </summary>
        public string? ProductName { get => _productName; set => SetValue(ref _productName, value); }

        /// <summary>
        /// Gets or sets the Price.
        /// </summary>
        public decimal Price { get => _price; set => SetValue(ref _price, value); }

        /// <summary>
        /// Gets or sets the Change Log (see <see cref="CoreEx.Entities.ChangeLog"/>).
        /// </summary>
        public ChangeLogEx? ChangeLog { get => _changeLog; set => SetValue(ref _changeLog, value); }

        /// <summary>
        /// Creates the primary <see cref="CompositeKey"/>.
        /// </summary>
        /// <returns>The <see cref="CompositeKey"/>.</returns>
        /// <param name="productId">The <see cref="ProductId"/>.</param>
        public static CompositeKey CreatePrimaryKey(Guid productId) => new CompositeKey(productId);

        /// <summary>
        /// Gets the primary <see cref="CompositeKey"/> (consists of the following property(s): <see cref="ProductId"/>).
        /// </summary>
        [JsonIgnore]
        public CompositeKey PrimaryKey => CreatePrimaryKey(ProductId);

        /// <inheritdoc/>
        protected override IEnumerable<IPropertyValue> GetPropertyValues()
        {
            yield return CreateProperty(nameof(ProductId), ProductId, v => ProductId = v);
            yield return CreateProperty(nameof(ProductName), ProductName, v => ProductName = v);
            yield return CreateProperty(nameof(Price), Price, v => Price = v);
            yield return CreateProperty(nameof(ChangeLog), ChangeLog, v => ChangeLog = v);
        }
    }

    /// <summary>
    /// Represents the <see cref="Product"/> collection.
    /// </summary>
    public partial class ProductCollection : EntityBaseCollection<Product, ProductCollection>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCollection"/> class.
        /// </summary>
        public ProductCollection() { }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCollection"/> class with <paramref name="items"/> to add.
        /// </summary>
        /// <param name="items">The items to add.</param>
        public ProductCollection(IEnumerable<Product> items) => AddRange(items);
    }

    /// <summary>
    /// Represents the <see cref="Product"/> collection result.
    /// </summary>
    public class ProductCollectionResult : EntityCollectionResult<ProductCollection, Product, ProductCollectionResult>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCollectionResult"/> class.
        /// </summary>
        public ProductCollectionResult() { }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCollectionResult"/> class with <paramref name="paging"/>.
        /// </summary>
        /// <param name="paging">The <see cref="PagingArgs"/>.</param>
        public ProductCollectionResult(PagingArgs? paging) : base(paging) { }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCollectionResult"/> class with <paramref name="items"/> to add.
        /// </summary>
        /// <param name="items">The items to add.</param>
        /// <param name="paging">The optional <see cref="PagingArgs"/>.</param>
        public ProductCollectionResult(IEnumerable<Product> items, PagingArgs? paging = null) : base(paging) => Items.AddRange(items);
    }
}

#pragma warning restore
#nullable restore