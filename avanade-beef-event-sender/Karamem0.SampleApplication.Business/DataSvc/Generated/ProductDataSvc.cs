/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

namespace Karamem0.SampleApplication.Business.DataSvc
{
    /// <summary>
    /// Provides the <see cref="Product"/> data repository services.
    /// </summary>
    public partial class ProductDataSvc : IProductDataSvc
    {
        private readonly IProductData _data;
        private readonly IEventPublisher _events;
        private readonly IRequestCache _cache;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductDataSvc"/> class.
        /// </summary>
        /// <param name="data">The <see cref="IProductData"/>.</param>
        /// <param name="events">The <see cref="IEventPublisher"/>.</param>
        /// <param name="cache">The <see cref="IRequestCache"/>.</param>
        public ProductDataSvc(IProductData data, IEventPublisher events, IRequestCache cache)
            { _data = data ?? throw new ArgumentNullException(nameof(data)); _events = events ?? throw new ArgumentNullException(nameof(events)); _cache = cache ?? throw new ArgumentNullException(nameof(cache)); ProductDataSvcCtor(); }

        partial void ProductDataSvcCtor(); // Enables additional functionality to be added to the constructor.

        /// <summary>
        /// Gets the <see cref="ProductCollectionResult"/> that contains the items that match the selection criteria.
        /// </summary>
        /// <returns>The <see cref="ProductCollectionResult"/>.</returns>
        public Task<ProductCollectionResult> GetAllAsync() => _data.GetAllAsync();

        /// <summary>
        /// Gets the specified <see cref="Product"/>.
        /// </summary>
        /// <param name="productId">The Product Id.</param>
        /// <returns>The selected <see cref="Product"/> where found.</returns>
        public Task<Product?> GetAsync(Guid productId) => _cache.GetOrAddAsync(productId, () => _data.GetAsync(productId));

        /// <summary>
        /// Creates a new <see cref="Product"/>.
        /// </summary>
        /// <param name="value">The <see cref="Product"/>.</param>
        /// <returns>The created <see cref="Product"/>.</returns>
        public Task<Product> CreateAsync(Product value) => DataSvcInvoker.Current.InvokeAsync(this, async _ =>
        {
            var __result = await _data.CreateAsync(value ?? throw new ArgumentNullException(nameof(value))).ConfigureAwait(false);
            _events.PublishValueEvent(__result, new Uri($"karamem0/sampleapplication/product/{__result.ProductId}", UriKind.Relative), $"Karamem0.SampleApplication.Product", "Created");
            return _cache.SetValue(__result);
        }, new InvokerArgs { EventPublisher = _events });

        /// <summary>
        /// Updates an existing <see cref="Product"/>.
        /// </summary>
        /// <param name="value">The <see cref="Product"/>.</param>
        /// <returns>The updated <see cref="Product"/>.</returns>
        public Task<Product> UpdateAsync(Product value) => DataSvcInvoker.Current.InvokeAsync(this, async _ =>
        {
            var __result = await _data.UpdateAsync(value ?? throw new ArgumentNullException(nameof(value))).ConfigureAwait(false);
            _events.PublishValueEvent(__result, new Uri($"karamem0/sampleapplication/product/{__result.ProductId}", UriKind.Relative), $"Karamem0.SampleApplication.Product", "Updated");
            return _cache.SetValue(__result);
        }, new InvokerArgs { EventPublisher = _events });

        /// <summary>
        /// Deletes the specified <see cref="Product"/>.
        /// </summary>
        /// <param name="productId">The Product Id.</param>
        public Task DeleteAsync(Guid productId) => DataSvcInvoker.Current.InvokeAsync(this, async _ =>
        {
            _cache.Remove<Product>(productId);
            await _data.DeleteAsync(productId).ConfigureAwait(false);
            _events.PublishValueEvent(new Product { ProductId = productId }, new Uri($"karamem0/sampleapplication/product/{productId}", UriKind.Relative), $"Karamem0.SampleApplication.Product", "Deleted");
        }, new InvokerArgs { EventPublisher = _events });
    }
}

#pragma warning restore
#nullable restore