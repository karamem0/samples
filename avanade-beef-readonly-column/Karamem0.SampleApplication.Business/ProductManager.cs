/*
 * This file is automatically generated; any changes will be lost.
 */

#nullable enable
#pragma warning disable

using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Beef;
using Beef.Business;
using Beef.Entities;
using Beef.Validation;
using Karamem0.SampleApplication.Business.Entities;
using Karamem0.SampleApplication.Business.DataSvc;
using Karamem0.SampleApplication.Business.Validation;
using RefDataNamespace = Karamem0.SampleApplication.Business.Entities;

namespace Karamem0.SampleApplication.Business
{
    /// <summary>
    /// Provides the <see cref="Product"/> business functionality.
    /// </summary>
    public partial class ProductManager : IProductManager
    {
        /// <summary>
        /// Updates an existing <see cref="ProductPrice"/>.
        /// </summary>
        /// <param name="value">The <see cref="ProductPrice"/>.</param>
        /// <param name="productId">The Product Id.</param>
        /// <returns>The updated <see cref="Product"/>.</returns>
        public async Task<Product> UpdatePriceOnImplementationAsync(ProductPrice value, Guid productId)
        {
            Cleaner.CleanUp(productId);
            await value.Validate().Mandatory().RunAsync(throwOnError: true).ConfigureAwait(false);
            var data = Cleaner.Clean(await _dataService.GetAsync(productId).ConfigureAwait(false));
            var result = Cleaner.Clean(await _dataService.UpdateAsync(_mapper.Map(value, data)).ConfigureAwait(false));
            return result;
        }
    }
}
